@use './variable' as *;

// apply a prefix to scss selector
@mixin p($ns, $append: false) {
  $selector: $ns;
  @if $append {
    $selector: $selector + $append
  }
  .#{$selector} {
    @content;
  }
}

@mixin theme($theme: $dark-mode) {
  @at-root html.#{$theme} & {
    @content
  }
}

@mixin theme-d() {
  @include theme() {
    @content
  }
}

@mixin theme-s() {
  @include theme($sharp-mode) {
    @content
  }
}

@mixin theme-r() {
  @include theme($round-mode) {
    @content
  }
}

@mixin backImg($color, $url: 'none') {
  @if $url != 'none' {
    background: rgba($color, .77) url($url) 50%;
  } @else {
    background: rgba($color, 1) 50%;
  }
  background-size: cover;
  &:after {
    display: block;
    content: "";
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: rgba($color, .85);
    top: 0;
    left: 0;
    z-index: -1;
  }
}

@mixin bottomBorder($color: #b4b4b4, $mar: 10px) {
  &:after {
    position: absolute;
    left: $mar;
    bottom: 0;
    height: 1px;
    width: calc(100% - #{2 * $mar});
    content: "";
    background-color: rgba($color,.3);
  }
}

@mixin clearFix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin scrollBar {
  &::-webkit-scrollbar-track-piece {
    background: #d3dce6;
  }

  &::-webkit-scrollbar {
    width: 6px;
  }

  &::-webkit-scrollbar-thumb {
    background: #99a9bf;
    border-radius: 20px;
  }
}

@mixin relative {
  position: relative;
  width: 100%;
  height: 100%;
}

@mixin activeBorder {
  border: 1px solid var(--el-border-color);
  border-radius: 0;
  &:hover {
    border-color: var(--el-border-color-hover);
  }
  &:focus {
    border-color: var(--el-color-primary);
    outline: 0;
  }
}

@mixin expandTransition($duration) {
  &.expand-enter-active,
  &.expand-leave-active {
    transition: height $duration ease;
    overflow: hidden;
  }
  &.expand-enter-from,
  &.expand-leave-to {
    height: 0 !important;
  }
}
